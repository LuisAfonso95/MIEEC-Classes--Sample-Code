.data

.text
Mandelbrot:

beq $a1, 0, return1

addi $sp, $sp, -8	#reserva espaço para 2 inteiros
addi $t0,$a1, -1	#faz n-1
sw $t0, 0($sp)		#guarda n-1
sw $ra, 4($sp)		#guarda registo de retorno
bne $t0, 0, else	#se t0 for 0, salta
li $v0, $a0		#mete z inicial em v0
addi $sp, $sp, 8	#restaura stack
jr $ra

else:
move $a1, $t0		#mete n-1 em a1, parametro para proxima chamada
jal Mandelbrot		#chama-se a si mesma 
lw $t0, 0($sp)		#carrega o valor respetivo de n-1
mul $v0, $v0		#
mflo $t1		#z^2
mul $t1, $t0		#
mflo $t1		#(n-1)*z^2
addu $v0, $t1, $a0	# + z0

lw $ra, 4($sp)		#restaura ra respetivo
addi $sp, $sp, 8	#restaura a stack
jr $ra			#salta para retorno









